# 0. Check necessary options.
# 1. When both databases do not exists, it must fail.
# 2. When both databases exist, it must fail.
# 3. When the source database exists and the target does not, rename it.
# 4. When the source database doesn't exist and the target does, do nothing.
# 5. Check mode

- become_user: '{{ pg_user }}'
  become: true
  vars:
    db_source_name: acme
    db_target_name: acme1

    task_parameters: &task_parameters
      register: result

    pg_parameters: &pg_parameters
      login_user: '{{ pg_user }}'

  block:
  # 0. Check necessary options.
  - name: Miss target option, must fail
    <<: *task_parameters
    postgresql_db:
      <<: *pg_parameters
      name: '{{ db_source_name }}'
      state: rename
    ignore_errors: yes

  - assert:
      that:
      - result is failed
      - result.msg == 'The "target" option must be defined when the "rename" option is used.'

  - name: Target and name options are the same, must fail
    <<: *task_parameters
    postgresql_db:
      <<: *pg_parameters
      name: '{{ db_source_name }}'
      state: rename
      target: '{{ db_source_name }}'
    ignore_errors: yes

  - assert:
      that:
      - result is failed
      - result.msg == 'The "name/db" option and the "target" option cannot be the same.'

  - name: Maintenance_db and name options are the same, must fail
    <<: *task_parameters
    postgresql_db:
      <<: *pg_parameters
      name: postgres
      state: rename
      target: '{{ db_source_name }}'
    ignore_errors: yes

  - assert:
      that:
      - result is failed
      - result.msg == 'The "maintenance_db" option and the "name/db" option cannot be the same.'

  # 1. When both databases do not exists, it must fail.
  - name: Try to rename when both do not exist, must fail
    <<: *task_parameters
    postgresql_db:
      <<: *pg_parameters
      name: '{{ db_source_name }}'
      state: rename
      target: '{{ db_target_name}}'
    ignore_errors: yes

  - assert:
      that:
      - result is failed
      - result.msg == 'The source and the target databases do not exist.'

  - name: Try to rename when both do not exist, must fail, check_mode
    <<: *task_parameters
    postgresql_db:
      <<: *pg_parameters
      name: '{{ db_source_name }}'
      state: rename
      target: '{{ db_target_name}}'
    ignore_errors: yes
    check_mode: yes

  - assert:
      that:
      - result is failed
      - result.msg == 'The source and the target databases do not exist.'

  # 2. When both databases exist, it must fail.
  - name: Create test DBs
    <<: *task_parameters
    postgresql_db:
      <<: *pg_parameters
      name: '{{ item }}'
      state: present
    loop:
    - '{{ db_source_name }}'
    - '{{ db_target_name }}'

  - name: Try to rename when both exist, must fail
    <<: *task_parameters
    postgresql_db:
      <<: *pg_parameters
      name: '{{ db_source_name }}'
      state: rename
      target: '{{ db_target_name}}'
    ignore_errors: yes

  - assert:
      that:
      - result is failed
      - result.msg == 'Both the source and the target databases exist.'

  - name: Try to rename when both exist, must fail
    <<: *task_parameters
    postgresql_db:
      <<: *pg_parameters
      name: '{{ db_source_name }}'
      state: rename
      target: '{{ db_target_name}}'
    ignore_errors: yes

  - assert:
      that:
      - result is failed
      - result.msg == 'Both the source and the target databases exist.'
